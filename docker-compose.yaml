version: "3.9"

services:
  # =========================
  # PostgreSQL Database
  # ========================
  postgres:
    image: postgres:15
    container_name: postgres_lib
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_lib:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app_network
    # healthcheck:  # ✅ Đợi PostgreSQL thực sự ready
    #   test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
    #   interval: 5s
    #   timeout: 5s
    #   retries: 10
    #   start_period: 10s

  # # =========================
  # # Alembic Migration Service
  # # =========================
  migration:
    build:
      context: ./backend/shared
      dockerfile: Dockerfile
    container_name: alembic_migration
    command: >
      sh -c "alembic -c /app/shared/alembic.ini upgrade head"
    volumes:
      - ./backend:/app
    depends_on:
      - postgres
        # condition: service_healthy
    environment:
      PYTHONPATH: /app
      DATABASE_URL: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    networks:
      - app_network

  # # =========================
  # # User Service
  # # =========================
  user_service:
    image: user_service
    container_name: user_service
    command: >
      sh -c "uvicorn user_service.app.main:app --host 0.0.0.0 --port 8000 --reload"
    environment:
      DATABASE_URL: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      PYTHONPATH: /app
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - migration
    networks:
      - app_network

  book_service:
    image: book_service
    container_name: book_service
    command: >
      sh -c "uvicorn book_service.app.main:app --host 0.0.0.0 --port 8001 --reload"
    environment:
      DATABASE_URL: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      PYTHONPATH: /app
    volumes:
      - ./backend:/app
    ports:
      - "8001:8001"
    depends_on:
      - postgres
      - migration
      - kafka
    networks:
      - app_network

  borrow_service:
    image: borrow_service
    container_name: borrow_service
    command: >
      sh -c "uvicorn borrow_service.app.main:app --host 0.0.0.0 --port 8002 --reload"
    environment:
      DATABASE_URL: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      PYTHONPATH: /app
    volumes:
      - ./backend:/app
    ports:
      - "8002:8002"
    depends_on:
      - postgres
      - migration
      - kafka
    networks:
      - app_network

  notification_service:
    image: notification_service
    container_name: notification_service
    command: >
      sh -c "uvicorn notification_service.app.main:app --host 0.0.0.0 --port 8003 --reload"
    environment:
      DATABASE_URL: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      PYTHONPATH: /app
    volumes:
      - ./backend:/app
    ports:
      - "8003:8003"
    depends_on:
      - postgres
      - migration
    networks:
      - app_network
  

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    environment:
      KAFKA_BROKER_ID: 1
      # Listener cho client và controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INTERNAL://0.0.0.0:29092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      CLUSTER_ID: "febd9c64-861f-4759-826e-8d8bdb980b5a"
      KAFKA_NUM_PARTITIONS: 1
    volumes:
      - kafka_data:/var/lib/kafka/data
    ports:
      - "9092:9092"
      - "9093:9093"
    networks:
      - app_network

# =========================
# Volumes & Networks
# =========================
volumes:
  postgres_lib:
  kafka_data:

networks:
  app_network:
    driver: bridge
